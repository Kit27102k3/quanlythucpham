"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _mongoose = _interopRequireDefault(require("mongoose"));

const customerLogSchema = new _mongoose.default.Schema({
  userId: {
    type: _mongoose.default.Schema.Types.ObjectId,
    ref: 'User',
    required: false
  },
  customerEmail: {
    type: String,
    required: false
  },
  action: {
    type: String,
    required: true,
    enum: ['login', 'logout', 'register', 'password_reset', 'profile_update', 'order_placed', 'payment', 'cart_update', 'review_submitted', 'coupon_used', 'view_product', 'search', 'other']
  },
  status: {
    type: String,
    enum: ['success', 'failed', 'pending', 'cancelled'],
    default: 'success'
  },
  details: {
    type: _mongoose.default.Schema.Types.Mixed,
    default: {}
  },
  ip: {
    type: String,
    required: false
  },
  userAgent: {
    type: String,
    required: false
  },
  deviceInfo: {
    type: _mongoose.default.Schema.Types.Mixed,
    default: {}
  },
  sessionId: {
    type: String,
    required: false
  },
  timestamp: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true
});

// Tạo index để tìm kiếm nhanh
customerLogSchema.index({ customerId: 1 });
customerLogSchema.index({ action: 1 });
customerLogSchema.index({ status: 1 });
customerLogSchema.index({ timestamp: -1 });
customerLogSchema.index({ customerEmail: 1 });

// Phương thức tĩnh để tạo log
customerLogSchema.statics.createLog = async function (logData) {
  try {
    return await this.create(logData);
  } catch (error) {
    console.error('Error creating customer log:', error);
    return null;
  }
};

// Phương thức tĩnh để lấy logs của một khách hàng
customerLogSchema.statics.getCustomerLogs = async function (customerId, limit = 50) {
  return this.find({ customerId }).
  sort({ timestamp: -1 }).
  limit(limit);
};

// Phương thức tĩnh để lấy logs theo loại hành động
customerLogSchema.statics.getLogsByAction = async function (action, limit = 50) {
  return this.find({ action }).
  sort({ timestamp: -1 }).
  limit(limit);
};

const CustomerLog = _mongoose.default.model('CustomerLog', customerLogSchema);var _default = exports.default =

CustomerLog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbW9uZ29vc2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImN1c3RvbWVyTG9nU2NoZW1hIiwibW9uZ29vc2UiLCJTY2hlbWEiLCJ1c2VySWQiLCJ0eXBlIiwiVHlwZXMiLCJPYmplY3RJZCIsInJlZiIsInJlcXVpcmVkIiwiY3VzdG9tZXJFbWFpbCIsIlN0cmluZyIsImFjdGlvbiIsImVudW0iLCJzdGF0dXMiLCJkZWZhdWx0IiwiZGV0YWlscyIsIk1peGVkIiwiaXAiLCJ1c2VyQWdlbnQiLCJkZXZpY2VJbmZvIiwic2Vzc2lvbklkIiwidGltZXN0YW1wIiwiRGF0ZSIsIm5vdyIsInRpbWVzdGFtcHMiLCJpbmRleCIsImN1c3RvbWVySWQiLCJzdGF0aWNzIiwiY3JlYXRlTG9nIiwibG9nRGF0YSIsImNyZWF0ZSIsImVycm9yIiwiY29uc29sZSIsImdldEN1c3RvbWVyTG9ncyIsImxpbWl0IiwiZmluZCIsInNvcnQiLCJnZXRMb2dzQnlBY3Rpb24iLCJDdXN0b21lckxvZyIsIm1vZGVsIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL01vZGVsL0N1c3RvbWVyTG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5jb25zdCBjdXN0b21lckxvZ1NjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gIHVzZXJJZDoge1xyXG4gICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLFxyXG4gICAgcmVmOiAnVXNlcicsXHJcbiAgICByZXF1aXJlZDogZmFsc2VcclxuICB9LFxyXG4gIGN1c3RvbWVyRW1haWw6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiBmYWxzZVxyXG4gIH0sXHJcbiAgYWN0aW9uOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgIGVudW06IFsnbG9naW4nLCAnbG9nb3V0JywgJ3JlZ2lzdGVyJywgJ3Bhc3N3b3JkX3Jlc2V0JywgJ3Byb2ZpbGVfdXBkYXRlJywgJ29yZGVyX3BsYWNlZCcsICdwYXltZW50JywgJ2NhcnRfdXBkYXRlJywgJ3Jldmlld19zdWJtaXR0ZWQnLCAnY291cG9uX3VzZWQnLCAndmlld19wcm9kdWN0JywgJ3NlYXJjaCcsICdvdGhlciddXHJcbiAgfSxcclxuICBzdGF0dXM6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIGVudW06IFsnc3VjY2VzcycsICdmYWlsZWQnLCAncGVuZGluZycsICdjYW5jZWxsZWQnXSxcclxuICAgIGRlZmF1bHQ6ICdzdWNjZXNzJ1xyXG4gIH0sXHJcbiAgZGV0YWlsczoge1xyXG4gICAgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk1peGVkLFxyXG4gICAgZGVmYXVsdDoge31cclxuICB9LFxyXG4gIGlwOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogZmFsc2VcclxuICB9LFxyXG4gIHVzZXJBZ2VudDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IGZhbHNlXHJcbiAgfSxcclxuICBkZXZpY2VJbmZvOiB7XHJcbiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuTWl4ZWQsXHJcbiAgICBkZWZhdWx0OiB7fVxyXG4gIH0sXHJcbiAgc2Vzc2lvbklkOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogZmFsc2VcclxuICB9LFxyXG4gIHRpbWVzdGFtcDoge1xyXG4gICAgdHlwZTogRGF0ZSxcclxuICAgIGRlZmF1bHQ6IERhdGUubm93XHJcbiAgfVxyXG59LCB7XHJcbiAgdGltZXN0YW1wczogdHJ1ZVxyXG59KTtcclxuXHJcbi8vIFThuqFvIGluZGV4IMSR4buDIHTDrG0ga2nhur9tIG5oYW5oXHJcbmN1c3RvbWVyTG9nU2NoZW1hLmluZGV4KHsgY3VzdG9tZXJJZDogMSB9KTtcclxuY3VzdG9tZXJMb2dTY2hlbWEuaW5kZXgoeyBhY3Rpb246IDEgfSk7XHJcbmN1c3RvbWVyTG9nU2NoZW1hLmluZGV4KHsgc3RhdHVzOiAxIH0pO1xyXG5jdXN0b21lckxvZ1NjaGVtYS5pbmRleCh7IHRpbWVzdGFtcDogLTEgfSk7XHJcbmN1c3RvbWVyTG9nU2NoZW1hLmluZGV4KHsgY3VzdG9tZXJFbWFpbDogMSB9KTtcclxuXHJcbi8vIFBoxrDGoW5nIHRo4bupYyB0xKluaCDEkeG7gyB04bqhbyBsb2dcclxuY3VzdG9tZXJMb2dTY2hlbWEuc3RhdGljcy5jcmVhdGVMb2cgPSBhc3luYyBmdW5jdGlvbihsb2dEYXRhKSB7XHJcbiAgdHJ5IHtcclxuICAgIHJldHVybiBhd2FpdCB0aGlzLmNyZWF0ZShsb2dEYXRhKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgY3VzdG9tZXIgbG9nOicsIGVycm9yKTtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIFBoxrDGoW5nIHRo4bupYyB0xKluaCDEkeG7gyBs4bqleSBsb2dzIGPhu6dhIG3hu5l0IGtow6FjaCBow6BuZ1xyXG5jdXN0b21lckxvZ1NjaGVtYS5zdGF0aWNzLmdldEN1c3RvbWVyTG9ncyA9IGFzeW5jIGZ1bmN0aW9uKGN1c3RvbWVySWQsIGxpbWl0ID0gNTApIHtcclxuICByZXR1cm4gdGhpcy5maW5kKHsgY3VzdG9tZXJJZCB9KVxyXG4gICAgLnNvcnQoeyB0aW1lc3RhbXA6IC0xIH0pXHJcbiAgICAubGltaXQobGltaXQpO1xyXG59O1xyXG5cclxuLy8gUGjGsMahbmcgdGjhu6ljIHTEqW5oIMSR4buDIGzhuqV5IGxvZ3MgdGhlbyBsb+G6oWkgaMOgbmggxJHhu5luZ1xyXG5jdXN0b21lckxvZ1NjaGVtYS5zdGF0aWNzLmdldExvZ3NCeUFjdGlvbiA9IGFzeW5jIGZ1bmN0aW9uKGFjdGlvbiwgbGltaXQgPSA1MCkge1xyXG4gIHJldHVybiB0aGlzLmZpbmQoeyBhY3Rpb24gfSlcclxuICAgIC5zb3J0KHsgdGltZXN0YW1wOiAtMSB9KVxyXG4gICAgLmxpbWl0KGxpbWl0KTtcclxufTtcclxuXHJcbmNvbnN0IEN1c3RvbWVyTG9nID0gbW9uZ29vc2UubW9kZWwoJ0N1c3RvbWVyTG9nJywgY3VzdG9tZXJMb2dTY2hlbWEpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ3VzdG9tZXJMb2c7ICJdLCJtYXBwaW5ncyI6InlMQUFBLElBQUFBLFNBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTs7QUFFQSxNQUFNQyxpQkFBaUIsR0FBRyxJQUFJQyxpQkFBUSxDQUFDQyxNQUFNLENBQUM7RUFDNUNDLE1BQU0sRUFBRTtJQUNOQyxJQUFJLEVBQUVILGlCQUFRLENBQUNDLE1BQU0sQ0FBQ0csS0FBSyxDQUFDQyxRQUFRO0lBQ3BDQyxHQUFHLEVBQUUsTUFBTTtJQUNYQyxRQUFRLEVBQUU7RUFDWixDQUFDO0VBQ0RDLGFBQWEsRUFBRTtJQUNiTCxJQUFJLEVBQUVNLE1BQU07SUFDWkYsUUFBUSxFQUFFO0VBQ1osQ0FBQztFQUNERyxNQUFNLEVBQUU7SUFDTlAsSUFBSSxFQUFFTSxNQUFNO0lBQ1pGLFFBQVEsRUFBRSxJQUFJO0lBQ2RJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFFLGdCQUFnQixFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLE9BQU87RUFDMUwsQ0FBQztFQUNEQyxNQUFNLEVBQUU7SUFDTlQsSUFBSSxFQUFFTSxNQUFNO0lBQ1pFLElBQUksRUFBRSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFdBQVcsQ0FBQztJQUNuREUsT0FBTyxFQUFFO0VBQ1gsQ0FBQztFQUNEQyxPQUFPLEVBQUU7SUFDUFgsSUFBSSxFQUFFSCxpQkFBUSxDQUFDQyxNQUFNLENBQUNHLEtBQUss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