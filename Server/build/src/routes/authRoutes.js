"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _express = _interopRequireDefault(require("express"));
var _authController = require("../Controller/authController.js");

























var _authMiddleware = require("../Middleware/authMiddleware.js");

const router = _express.default.Router();

router.post("/register", _authController.register);
router.post("/login", _authController.login);
router.post("/logout", _authController.logout);
router.post("/refresh-token", _authController.refreshToken);
router.get("/profile", _authController.getAllUser);
router.get("/profile/:id", _authMiddleware.verifyToken, _authController.getUserProfile);
router.put("/update/:userId", _authMiddleware.verifyToken, _authController.updateUser);
router.post("/request-password-reset", _authController.requestPasswordReset);
router.post("/reset-password", _authController.resetPassword);
router.put("/profile/block/:userId", _authController.blockUser);

// User avatar route
router.get("/users/avatar/:id", _authController.getUserAvatar);

// Thêm các route cho OAuth
router.post("/facebook-login", _authController.facebookLogin);
router.post("/facebook-token", _authController.facebookTokenLogin);
router.post("/google-login", _authController.googleLogin);
router.get("/facebook/callback", _authController.facebookCallback);

// Route để lấy VAPID Public Key
router.get("/vapid-public-key", _authController.getVapidPublicKey);

// Route để đăng ký nhận Push Subscription
router.post("/subscribe", _authMiddleware.verifyToken, _authController.subscribeToPush);

// Add the validation route
router.post('/validate-subscription', _authController.validateSubscription);

// Các route quản lý địa chỉ
router.post("/user/:userId/addresses", _authMiddleware.verifyToken, _authController.addUserAddress);
router.get("/user/:userId/addresses", _authMiddleware.verifyToken, _authController.getUserAddresses);
router.put("/user/:userId/addresses/:addressId", _authMiddleware.verifyToken, _authController.updateUserAddress);
router.delete("/user/:userId/addresses/:addressId", _authMiddleware.verifyToken, _authController.deleteUserAddress);
router.put("/user/:userId/addresses/:addressId/default", _authMiddleware.verifyToken, _authController.setDefaultAddress);

// Admin route to migrate all legacy addresses
router.post("/admin/migrate-addresses", _authMiddleware.verifyToken, _authController.migrateAllLegacyAddresses);var _default = exports.default =

router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2F1dGhDb250cm9sbGVyIiwiX2F1dGhNaWRkbGV3YXJlIiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJyZWdpc3RlciIsImxvZ2luIiwibG9nb3V0IiwicmVmcmVzaFRva2VuIiwiZ2V0IiwiZ2V0QWxsVXNlciIsInZlcmlmeVRva2VuIiwiZ2V0VXNlclByb2ZpbGUiLCJwdXQiLCJ1cGRhdGVVc2VyIiwicmVxdWVzdFBhc3N3b3JkUmVzZXQiLCJyZXNldFBhc3N3b3JkIiwiYmxvY2tVc2VyIiwiZ2V0VXNlckF2YXRhciIsImZhY2Vib29rTG9naW4iLCJmYWNlYm9va1Rva2VuTG9naW4iLCJnb29nbGVMb2dpbiIsImZhY2Vib29rQ2FsbGJhY2siLCJnZXRWYXBpZFB1YmxpY0tleSIsInN1YnNjcmliZVRvUHVzaCIsInZhbGlkYXRlU3Vic2NyaXB0aW9uIiwiYWRkVXNlckFkZHJlc3MiLCJnZXRVc2VyQWRkcmVzc2VzIiwidXBkYXRlVXNlckFkZHJlc3MiLCJkZWxldGUiLCJkZWxldGVVc2VyQWRkcmVzcyIsInNldERlZmF1bHRBZGRyZXNzIiwibWlncmF0ZUFsbExlZ2FjeUFkZHJlc3NlcyIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2F1dGhSb3V0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCB7XG4gIHJlZ2lzdGVyLFxuICBsb2dpbixcbiAgbG9nb3V0LFxuICByZWZyZXNoVG9rZW4sXG4gIGdldFVzZXJQcm9maWxlLFxuICBnZXRBbGxVc2VyLFxuICB1cGRhdGVVc2VyLFxuICByZXF1ZXN0UGFzc3dvcmRSZXNldCxcbiAgcmVzZXRQYXNzd29yZCxcbiAgYmxvY2tVc2VyLFxuICBmYWNlYm9va0xvZ2luLFxuICBnb29nbGVMb2dpbixcbiAgZmFjZWJvb2tDYWxsYmFjayxcbiAgZmFjZWJvb2tUb2tlbkxvZ2luLFxuICBnZXRVc2VyQXZhdGFyLFxuICBnZXRWYXBpZFB1YmxpY0tleSxcbiAgc3Vic2NyaWJlVG9QdXNoLFxuICB2YWxpZGF0ZVN1YnNjcmlwdGlvbixcbiAgYWRkVXNlckFkZHJlc3MsXG4gIGdldFVzZXJBZGRyZXNzZXMsXG4gIHVwZGF0ZVVzZXJBZGRyZXNzLFxuICBkZWxldGVVc2VyQWRkcmVzcyxcbiAgc2V0RGVmYXVsdEFkZHJlc3MsXG4gIG1pZ3JhdGVBbGxMZWdhY3lBZGRyZXNzZXNcbn0gZnJvbSBcIi4uL0NvbnRyb2xsZXIvYXV0aENvbnRyb2xsZXIuanNcIjtcbmltcG9ydCB7IHZlcmlmeVRva2VuIH0gZnJvbSBcIi4uL01pZGRsZXdhcmUvYXV0aE1pZGRsZXdhcmUuanNcIjtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLnBvc3QoXCIvcmVnaXN0ZXJcIiwgcmVnaXN0ZXIpO1xucm91dGVyLnBvc3QoXCIvbG9naW5cIiwgbG9naW4pO1xucm91dGVyLnBvc3QoXCIvbG9nb3V0XCIsIGxvZ291dCk7XG5yb3V0ZXIucG9zdChcIi9yZWZyZXNoLXRva2VuXCIsIHJlZnJlc2hUb2tlbik7XG5yb3V0ZXIuZ2V0KFwiL3Byb2ZpbGVcIiwgZ2V0QWxsVXNlcik7XG5yb3V0ZXIuZ2V0KFwiL3Byb2ZpbGUvOmlkXCIsIHZlcmlmeVRva2VuLCBnZXRVc2VyUHJvZmlsZSk7XG5yb3V0ZXIucHV0KFwiL3VwZGF0ZS86dXNlcklkXCIsIHZlcmlmeVRva2VuLCB1cGRhdGVVc2VyKTtcbnJvdXRlci5wb3N0KFwiL3JlcXVlc3QtcGFzc3dvcmQtcmVzZXRcIiwgcmVxdWVzdFBhc3N3b3JkUmVzZXQpO1xucm91dGVyLnBvc3QoXCIvcmVzZXQtcGFzc3dvcmRcIiwgcmVzZXRQYXNzd29yZCk7XG5yb3V0ZXIucHV0KFwiL3Byb2ZpbGUvYmxvY2svOnVzZXJJZFwiLCBibG9ja1VzZXIpO1xuXG4vLyBVc2VyIGF2YXRhciByb3V0ZVxucm91dGVyLmdldChcIi91c2Vycy9hdmF0YXIvOmlkXCIsIGdldFVzZXJBdmF0YXIpO1xuXG4vLyBUaMOqbSBjw6FjIHJvdXRlIGNobyBPQXV0aFxucm91dGVyLnBvc3QoXCIvZmFjZWJvb2stbG9naW5cIiwgZmFjZWJvb2tMb2dpbik7XG5yb3V0ZXIucG9zdChcIi9mYWNlYm9vay10b2tlblwiLCBmYWNlYm9va1Rva2VuTG9naW4pO1xucm91dGVyLnBvc3QoXCIvZ29vZ2xlLWxvZ2luXCIsIGdvb2dsZUxvZ2luKTtcbnJvdXRlci5nZXQoXCIvZmFjZWJvb2svY2FsbGJhY2tcIiwgZmFjZWJvb2tDYWxsYmFjayk7XG5cbi8vIFJvdXRlIMSR4buDIGzhuqV5IFZBUElEIFB1YmxpYyBLZXlcbnJvdXRlci5nZXQoXCIvdmFwaWQtcHVibGljLWtleVwiLCBnZXRWYXBpZFB1YmxpY0tleSk7XG5cbi8vIFJvdXRlIMSR4buDIMSRxINuZyBrw70gbmjhuq1uIFB1c2ggU3Vic2NyaXB0aW9uXG5yb3V0ZXIucG9zdChcIi9zdWJzY3JpYmVcIiwgdmVyaWZ5VG9rZW4sIHN1YnNjcmliZVRvUHVzaCk7XG5cbi8vIEFkZCB0aGUgdmFsaWRhdGlvbiByb3V0ZVxucm91dGVyLnBvc3QoJy92YWxpZGF0ZS1zdWJzY3JpcHRpb24nLCB2YWxpZGF0ZVN1YnNjcmlwdGlvbik7XG5cbi8vIEPDoWMgcm91dGUgcXXhuqNuIGzDvSDEkeG7i2EgY2jhu4lcbnJvdXRlci5wb3N0KFwiL3VzZXIvOnVzZXJJZC9hZGRyZXNzZXNcIiwgdmVyaWZ5VG9rZW4sIGFkZFVzZXJBZGRyZXNzKTtcbnJvdXRlci5nZXQoXCIvdXNlci86dXNlcklkL2FkZHJlc3Nlc1wiLCB2ZXJpZnlUb2tlbiwgZ2V0VXNlckFkZHJlc3Nlcyk7XG5yb3V0ZXIucHV0KFwiL3VzZXIvOnVzZXJJZC9hZGRyZXNzZXMvOmFkZHJlc3NJZFwiLCB2ZXJpZnlUb2tlbiwgdXBkYXRlVXNlckFkZHJlc3MpO1xucm91dGVyLmRlbGV0ZShcIi91c2VyLzp1c2VySWQvYWRkcmVzc2VzLzphZGRyZXNzSWRcIiwgdmVyaWZ5VG9rZW4sIGRlbGV0ZVVzZXJBZGRyZXNzKTtcbnJvdXRlci5wdXQoXCIvdXNlci86dXNlcklkL2FkZHJlc3Nlcy86YWRkcmVzc0lkL2RlZmF1bHRcIiwgdmVyaWZ5VG9rZW4sIHNldERlZmF1bHRBZGRyZXNzKTtcblxuLy8gQWRtaW4gcm91dGUgdG8gbWlncmF0ZSBhbGwgbGVnYWN5IGFkZHJlc3Nlc1xucm91dGVyLnBvc3QoXCIvYWRtaW4vbWlncmF0ZS1hZGRyZXNzZXNcIiwgdmVyaWZ5VG9rZW4sIG1pZ3JhdGVBbGxMZWdhY3lBZGRyZXNzZXMpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXSwibWFwcGluZ3MiOiJ5TEFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxlQUFBLEdBQUFELE9BQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBLElBQUFFLGVBQUEsR0FBQUYsT0FBQTs7QUFFQSxNQUFNRyxNQUFNLEdBQUdDLGdCQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDOztBQUUvQkYsTUFBTSxDQUFDRyxJQUFJLENBQUMsV0FBVyxFQUFFQyx3QkFBUSxDQUFDO0FBQ2xDSixNQUFNLENBQUNHLElBQUksQ0FBQyxRQUFRLEVBQUVFLHFCQUFLLENBQUM7QUFDNUJMLE1BQU0sQ0FBQ0csSUFBSSxDQUFDLFNBQVMsRUFBRUcsc0JBQU0sQ0FBQztBQUM5Qk4sTUFBTSxDQUFDRyxJQUFJLENBQUMsZ0JBQWdCLEVBQUVJLDRCQUFZLENBQUM7QUFDM0NQLE1BQU0sQ0FBQ1EsR0FBRyxDQUFDLFVBQVUsRUFBRUMsMEJBQVUsQ0FBQztBQUNsQ1QsTUFBTSxDQUFDUSxHQUFHLENBQUMsY0FBYyxFQUFFRSwyQkFBVyxFQUFFQyw4QkFBYyxDQUFDO0FBQ3ZEWCxNQUFNLENBQUNZLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRUYsMkJBQVcsRUFBRUcsMEJBQVUsQ0FBQztBQUN0RGIsTUFBTSxDQUFDRyxJQUFJLENBQUMseUJBQXlCLEVBQUVXLG9DQUFvQixDQUFDO0FBQzVEZCxNQUFNLENBQUNHLElBQUksQ0FBQyxpQkFBaUIsRUFBRVksNkJBQWEsQ0FBQztBQUM3Q2YsTUFBTSxDQUFDWSxHQUFHLENBQUMsd0JBQXdCLEVBQUVJLHlCQUFTLENBQUM7O0FBRS9DO0FBQ0FoQixNQUFNLENBQUNRLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRVMsNkJBQWEsQ0FBQzs7QUFFOUM7QUFDQWpCLE1BQU0sQ0FBQ0csSUFBSSxDQUFDLGlCQUFpQixFQUFFZSw2QkFBYSxDQUFDO0FBQzdDbEIsTUFBTSxDQUFDRyxJQUFJLENBQUMsaUJBQWlCLEVBQUVnQixrQ0FBa0IsQ0FBQztBQUNsRG5CLE1BQU0sQ0FBQ0csSUFBSSxDQUFDLGVBQWUsRUFBRWlCLDJCQUFXLENBQUM7QUFDekNwQixNQUFNLENBQUNRLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRWEsZ0NBQWdCLENBQUM7O0FBRWxEO0FBQ0FyQixNQUFNLENBQUNRLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRWMsaUNBQWlCLENBQUM7O0FBRWxEO0FBQ0F0QixNQUFNLENBQUNHLElBQUksQ0FBQyxZQUFZLEVBQUVPLDJCQUFXLEVBQUVhLCtCQUFlLENBQUM7O0FBRXZEO0FBQ0F2QixNQUFNLENBQUNHLElBQUksQ0FBQyx3QkFBd0IsRUFBRXFCLG9DQUFvQixDQUFDOztBQUUzRDtBQUNBeEIsTUFBTSxDQUFDRyxJQUFJLENBQUMseUJBQXlCLEVBQUVPLDJCQUFXLEVBQUVlLDhCQUFjLENBQUM7QUFDbkV6QixNQUFNLENBQUNRLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRUUsMkJBQVcsRUFBRWdCLGdDQUFnQixDQUFDO0FBQ3BFMUIsTUFBTSxDQUFDWSxHQUFHLENBQUMsb0NBQW9DLEVBQUVGLDJCQUFXLEVBQUVpQixpQ0FBaUIsQ0FBQztBQUNoRjNCLE1BQU0sQ0FBQzRCLE1BQU0sQ0FBQyxvQ0FBb0MsRUFBRWxCLDJCQUFXLEVBQUVtQixpQ0FBaUIsQ0FBQztBQUNuRjdCLE1BQU0sQ0FBQ1ksR0FBRyxDQUFDLDRDQUE0QyxFQUFFRiwyQkFBVyxFQUFFb0IsaUNBQWlCLENBQUM7O0FBRXhGO0FBQ0E5QixNQUFNLENBQUNHLElBQUksQ0FBQywwQkFBMEIsRUFBRU8sMkJBQVcsRUFBRXFCLHlDQUF5QixDQUFDLENBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUE7O0FBRWpFbEMsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==