"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _express = _interopRequireDefault(require("express"));
var _couponController = require("../Controller/couponController.js");










var _authMiddleware = require("../Middleware/authMiddleware.js");
var _Coupon = _interopRequireDefault(require("../Model/Coupon.js"));

const router = _express.default.Router();

// Public API - có thể truy cập mà không cần xác thực
router.post("/validate", _couponController.validateCoupon);
router.get("/code/:code", _couponController.getCouponByCode);
router.post("/use/:code", _couponController.updateCouponUsage);

// Route to get coupon statistics for reports
router.get("/stats", _couponController.getCouponStats);

// Public debug route for development
router.get("/all-for-debug", async (req, res) => {
  try {
    const allCoupons = await _Coupon.default.find().limit(10);
    return res.status(200).json(allCoupons);
  } catch (error) {
    return res.status(500).json({ message: "Internal server error in debug route" });
  }
});

// Route để lấy danh sách mã giảm giá công khai cho người dùng
router.get("/active", async (req, res) => {
  try {
    const limit = parseInt(req.query.limit) || 3;
    const now = new Date();

    // Find active coupons that haven't expired and haven't reached usage limit
    const coupons = await _Coupon.default.find({
      isActive: true,
      $or: [
      { expiresAt: { $gt: now } },
      { expiresAt: null }],

      $or: [
      { $expr: { $lt: ["$used", "$usageLimit"] } },
      { usageLimit: null }]

    }).
    sort({ createdAt: -1 }).
    limit(limit);

    return res.status(200).json(coupons);
  } catch (error) {
    console.error("Error getting active coupons:", error);
    return res.status(500).json({ message: "Internal server error" });
  }
});

// Protected API - yêu cầu xác thực và quyền Admin
router.post("/", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.createCoupon);
router.get("/", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.getAllCoupons);
router.put("/:id", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.updateCoupon);
router.delete("/:id", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.deleteCoupon);

// Reset số lần sử dụng mã giảm giá (Admin only)
router.patch("/reset-usage/:id", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.resetCouponUsage);var _default = exports.default =

router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2NvdXBvbkNvbnRyb2xsZXIiLCJfYXV0aE1pZGRsZXdhcmUiLCJfQ291cG9uIiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJ2YWxpZGF0ZUNvdXBvbiIsImdldCIsImdldENvdXBvbkJ5Q29kZSIsInVwZGF0ZUNvdXBvblVzYWdlIiwiZ2V0Q291cG9uU3RhdHMiLCJyZXEiLCJyZXMiLCJhbGxDb3Vwb25zIiwiQ291cG9uIiwiZmluZCIsImxpbWl0Iiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsInBhcnNlSW50IiwicXVlcnkiLCJub3ciLCJEYXRlIiwiY291cG9ucyIsImlzQWN0aXZlIiwiJG9yIiwiZXhwaXJlc0F0IiwiJGd0IiwiJGV4cHIiLCIkbHQiLCJ1c2FnZUxpbWl0Iiwic29ydCIsImNyZWF0ZWRBdCIsImNvbnNvbGUiLCJ2ZXJpZnlUb2tlbiIsImlzQWRtaW4iLCJjcmVhdGVDb3Vwb24iLCJnZXRBbGxDb3Vwb25zIiwicHV0IiwidXBkYXRlQ291cG9uIiwiZGVsZXRlIiwiZGVsZXRlQ291cG9uIiwicGF0Y2giLCJyZXNldENvdXBvblVzYWdlIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvY291cG9uUm91dGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgeyBcbiAgY3JlYXRlQ291cG9uLCBcbiAgZ2V0QWxsQ291cG9ucywgXG4gIGdldENvdXBvbkJ5Q29kZSwgXG4gIHZhbGlkYXRlQ291cG9uLFxuICB1cGRhdGVDb3Vwb25Vc2FnZSxcbiAgdXBkYXRlQ291cG9uLFxuICBkZWxldGVDb3Vwb24sXG4gIHJlc2V0Q291cG9uVXNhZ2UsXG4gIGdldENvdXBvblN0YXRzXG59IGZyb20gXCIuLi9Db250cm9sbGVyL2NvdXBvbkNvbnRyb2xsZXIuanNcIjtcbmltcG9ydCB7IHZlcmlmeVRva2VuLCBpc0FkbWluIH0gZnJvbSBcIi4uL01pZGRsZXdhcmUvYXV0aE1pZGRsZXdhcmUuanNcIjtcbmltcG9ydCBDb3Vwb24gZnJvbSBcIi4uL01vZGVsL0NvdXBvbi5qc1wiO1xuXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vLyBQdWJsaWMgQVBJIC0gY8OzIHRo4buDIHRydXkgY+G6rXAgbcOgIGtow7RuZyBj4bqnbiB4w6FjIHRo4buxY1xucm91dGVyLnBvc3QoXCIvdmFsaWRhdGVcIiwgdmFsaWRhdGVDb3Vwb24pO1xucm91dGVyLmdldChcIi9jb2RlLzpjb2RlXCIsIGdldENvdXBvbkJ5Q29kZSk7XG5yb3V0ZXIucG9zdChcIi91c2UvOmNvZGVcIiwgdXBkYXRlQ291cG9uVXNhZ2UpO1xuXG4vLyBSb3V0ZSB0byBnZXQgY291cG9uIHN0YXRpc3RpY3MgZm9yIHJlcG9ydHNcbnJvdXRlci5nZXQoXCIvc3RhdHNcIiwgZ2V0Q291cG9uU3RhdHMpO1xuXG4vLyBQdWJsaWMgZGVidWcgcm91dGUgZm9yIGRldmVsb3BtZW50XG5yb3V0ZXIuZ2V0KFwiL2FsbC1mb3ItZGVidWdcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgYWxsQ291cG9ucyA9IGF3YWl0IENvdXBvbi5maW5kKCkubGltaXQoMTApO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihhbGxDb3Vwb25zKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBcIkludGVybmFsIHNlcnZlciBlcnJvciBpbiBkZWJ1ZyByb3V0ZVwiIH0pO1xuICB9XG59KTtcblxuLy8gUm91dGUgxJHhu4MgbOG6pXkgZGFuaCBzw6FjaCBtw6MgZ2nhuqNtIGdpw6EgY8O0bmcga2hhaSBjaG8gbmfGsOG7nWkgZMO5bmdcbnJvdXRlci5nZXQoXCIvYWN0aXZlXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGxpbWl0ID0gcGFyc2VJbnQocmVxLnF1ZXJ5LmxpbWl0KSB8fCAzO1xuICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7XG4gICAgXG4gICAgLy8gRmluZCBhY3RpdmUgY291cG9ucyB0aGF0IGhhdmVuJ3QgZXhwaXJlZCBhbmQgaGF2ZW4ndCByZWFjaGVkIHVzYWdlIGxpbWl0XG4gICAgY29uc3QgY291cG9ucyA9IGF3YWl0IENvdXBvbi5maW5kKHtcbiAgICAgIGlzQWN0aXZlOiB0cnVlLFxuICAgICAgJG9yOiBbXG4gICAgICAgIHsgZXhwaXJlc0F0OiB7ICRndDogbm93IH0gfSxcbiAgICAgICAgeyBleHBpcmVzQXQ6IG51bGwgfVxuICAgICAgXSxcbiAgICAgICRvcjogW1xuICAgICAgICB7ICRleHByOiB7ICRsdDogW1wiJHVzZWRcIiwgXCIkdXNhZ2VMaW1pdFwiXSB9IH0sXG4gICAgICAgIHsgdXNhZ2VMaW1pdDogbnVsbCB9XG4gICAgICBdXG4gICAgfSlcbiAgICAuc29ydCh7IGNyZWF0ZWRBdDogLTEgfSlcbiAgICAubGltaXQobGltaXQpO1xuICAgIFxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihjb3Vwb25zKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZ2V0dGluZyBhY3RpdmUgY291cG9uczpcIiwgZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIgfSk7XG4gIH1cbn0pO1xuXG4vLyBQcm90ZWN0ZWQgQVBJIC0gecOqdSBj4bqndSB4w6FjIHRo4buxYyB2w6AgcXV54buBbiBBZG1pblxucm91dGVyLnBvc3QoXCIvXCIsIHZlcmlmeVRva2VuLCBpc0FkbWluLCBjcmVhdGVDb3Vwb24pO1xucm91dGVyLmdldChcIi9cIiwgdmVyaWZ5VG9rZW4sIGlzQWRtaW4sIGdldEFsbENvdXBvbnMpO1xucm91dGVyLnB1dChcIi86aWRcIiwgdmVyaWZ5VG9rZW4sIGlzQWRtaW4sIHVwZGF0ZUNvdXBvbik7XG5yb3V0ZXIuZGVsZXRlKFwiLzppZFwiLCB2ZXJpZnlUb2tlbiwgaXNBZG1pbiwgZGVsZXRlQ291cG9uKTtcblxuLy8gUmVzZXQgc+G7kSBs4bqnbiBz4butIGThu6VuZyBtw6MgZ2nhuqNtIGdpw6EgKEFkbWluIG9ubHkpXG5yb3V0ZXIucGF0Y2goXCIvcmVzZXQtdXNhZ2UvOmlkXCIsIHZlcmlmeVRva2VuLCBpc0FkbWluLCByZXNldENvdXBvblVzYWdlKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyOyAiXSwibWFwcGluZ3MiOiJ5TEFBQSxJQUFBQSxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxpQkFBQSxHQUFBRCxPQUFBOzs7Ozs7Ozs7OztBQVdBLElBQUFFLGVBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLE9BQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTs7QUFFQSxNQUFNSSxNQUFNLEdBQUdDLGdCQUFPLENBQUNDLE1BQU0sQ0FBQyxDQUFDOztBQUUvQjtBQUNBRixNQUFNLENBQUNHLElBQUksQ0FBQyxXQUFXLEVBQUVDLGdDQUFjLENBQUM7QUFDeENKLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDLGFBQWEsRUFBRUMsaUNBQWUsQ0FBQztBQUMxQ04sTUFBTSxDQUFDRyxJQUFJLENBQUMsWUFBWSxFQUFFSSxtQ0FBaUIsQ0FBQzs7QUFFNUM7QUFDQVAsTUFBTSxDQUFDSyxHQUFHLENBQUMsUUFBUSxFQUFFRyxnQ0FBYyxDQUFDOztBQUVwQztBQUNBUixNQUFNLENBQUNLLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPSSxHQUFHLEVBQUVDLEdBQUcsS0FBSztFQUMvQyxJQUFJO0lBQ0YsTUFBTUMsVUFBVSxHQUFHLE1BQU1DLGVBQU0sQ0FBQ0MsSUFBSSxDQUFDLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUNoRCxPQUFPSixHQUFHLENBQUNLLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDTCxVQUFVLENBQUM7RUFDekMsQ0FBQyxDQUFDLE9BQU9NLEtBQUssRUFBRTtJQUNkLE9BQU9QLEdBQUcsQ0FBQ0ssTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUMsRUFBRUUsT0FBTyxFQUFFLHNDQUFzQyxDQUFDLENBQUMsQ0FBQztFQUNsRjtBQUNGLENBQUMsQ0FBQzs7QUFFRjtBQUNBbEIsTUFBTSxDQUFDSyxHQUFHLENBQUMsU0FBUyxFQUFFLE9BQU9JLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ3hDLElBQUk7SUFDRixNQUFNSSxLQUFLLEdBQUdLLFFBQVEsQ0FBQ1YsR0FBRyxDQUFDVyxLQUFLLENBQUNOLEtBQUssQ0FBQyxJQUFJLENBQUM7SUFDNUMsTUFBTU8sR0FBRyxHQUFHLElBQUlDLElBQUksQ0FBQyxDQUFDOztJQUV0QjtJQUNBLE1BQU1DLE9BQU8sR0FBRyxNQUFNWCxlQUFNLENBQUNDLElBQUksQ0FBQztNQUNoQ1csUUFBUSxFQUFFLElBQUk7TUFDZEMsR0FBRyxFQUFFO01BQ0gsRUFBRUMsU0FBUyxFQUFFLEVBQUVDLEdBQUcsRUFBRU4sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO01BQzNCLEVBQUVLLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUNwQjs7TUFDREQsR0FBRyxFQUFFO01BQ0gsRUFBRUcsS0FBSyxFQUFFLEVBQUVDLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUM1QyxFQUFFQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7O0lBRXhCLENBQUMsQ0FBQztJQUNEQyxJQUFJLENBQUMsRUFBRUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2QmxCLEtBQUssQ0FBQ0EsS0FBSyxDQUFDOztJQUViLE9BQU9KLEdBQUcsQ0FBQ0ssTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUNPLE9BQU8sQ0FBQztFQUN0QyxDQUFDLENBQUMsT0FBT04sS0FBSyxFQUFFO0lBQ2RnQixPQUFPLENBQUNoQixLQUFLLENBQUMsK0JBQStCLEVBQUVBLEtBQUssQ0FBQztJQUNyRCxPQUFPUCxHQUFHLENBQUNLLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLEVBQUVFLE9BQU8sRUFBRSx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7RUFDbkU7QUFDRixDQUFDLENBQUM7O0FBRUY7QUFDQWxCLE1BQU0sQ0FBQ0csSUFBSSxDQUFDLEdBQUcsRUFBRStCLDJCQUFXLEVBQUVDLHVCQUFPLEVBQUVDLDhCQUFZLENBQUM7QUFDcERwQyxNQUFNLENBQUNLLEdBQUcsQ0FBQyxHQUFHLEVBQUU2QiwyQkFBVyxFQUFFQyx1QkFBTyxFQUFFRSwrQkFBYSxDQUFDO0FBQ3BEckMsTUFBTSxDQUFDc0MsR0FBRyxDQUFDLE1BQU0sRUFBRUosMkJBQVcsRUFBRUMsdUJBQU8sRUFBRUksOEJBQVksQ0FBQztBQUN0RHZDLE1BQU0sQ0FBQ3dDLE1BQU0sQ0FBQyxNQUFNLEVBQUVOLDJCQUFXLEVBQUVDLHVCQUFPLEVBQUVNLDhCQUFZLENBQUM7O0FBRXpEO0FBQ0F6QyxNQUFNLENBQUMwQyxLQUFLLENBQUMsa0JBQWtCLEVBQUVSLDJCQUFXLEVBQUVDLHVCQUFPLEVBQUVRLGtDQUFnQixDQUFDLENBQUMsSUFBQUMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUE7O0FBRTFEOUMsTUFBTSIsImlnbm9yZUxpc3QiOltdfQ==