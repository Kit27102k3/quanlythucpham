"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _express = _interopRequireDefault(require("express"));
var _couponController = require("../Controller/couponController.js");










var _authMiddleware = require("../Middleware/authMiddleware.js");
var _Coupon = _interopRequireDefault(require("../Model/Coupon.js"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };}

const router = _express.default.Router();

// Public API - có thể truy cập mà không cần xác thực
router.post("/validate", _couponController.validateCoupon);
router.get("/code/:code", _couponController.getCouponByCode);
router.post("/use/:code", _couponController.updateCouponUsage);

// Route to get coupon statistics for reports
router.get("/stats", _couponController.getCouponStats);

// Public debug route for development
router.get("/all-for-debug", async (req, res) => {
  try {
    const allCoupons = await _Coupon.default.find().limit(10);
    return res.status(200).json(allCoupons);
  } catch (error) {
    return res.status(500).json({ message: "Internal server error in debug route" });
  }
});

// Route để lấy danh sách mã giảm giá công khai cho người dùng
router.get("/active", async (req, res) => {
  try {
    const limit = parseInt(req.query.limit) || 3;
    const now = new Date();

    // Find active coupons that haven't expired and haven't reached usage limit
    const coupons = await _Coupon.default.find({
      isActive: true,
      $or: [
      { expiresAt: { $gt: now } },
      { expiresAt: null }],

      $or: [
      { $expr: { $lt: ["$used", "$usageLimit"] } },
      { usageLimit: null }]

    }).
    sort({ createdAt: -1 }).
    limit(limit);

    return res.status(200).json(coupons);
  } catch (error) {
    console.error("Error getting active coupons:", error);
    return res.status(500).json({ message: "Internal server error" });
  }
});

// Protected API - yêu cầu xác thực và quyền Admin
router.post("/", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.createCoupon);
router.get("/", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.getAllCoupons);
router.put("/:id", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.updateCoupon);
router.delete("/:id", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.deleteCoupon);

// Reset số lần sử dụng mã giảm giá (Admin only)
router.patch("/reset-usage/:id", _authMiddleware.verifyToken, _authMiddleware.isAdmin, _couponController.resetCouponUsage);var _default = exports.default =

router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2NvdXBvbkNvbnRyb2xsZXIiLCJfYXV0aE1pZGRsZXdhcmUiLCJfQ291cG9uIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0Iiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInBvc3QiLCJ2YWxpZGF0ZUNvdXBvbiIsImdldCIsImdldENvdXBvbkJ5Q29kZSIsInVwZGF0ZUNvdXBvblVzYWdlIiwiZ2V0Q291cG9uU3RhdHMiLCJyZXEiLCJyZXMiLCJhbGxDb3Vwb25zIiwiQ291cG9uIiwiZmluZCIsImxpbWl0Iiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsInBhcnNlSW50IiwicXVlcnkiLCJub3ciLCJEYXRlIiwiY291cG9ucyIsImlzQWN0aXZlIiwiJG9yIiwiZXhwaXJlc0F0IiwiJGd0IiwiJGV4cHIiLCIkbHQiLCJ1c2FnZUxpbWl0Iiwic29ydCIsImNyZWF0ZWRBdCIsImNvbnNvbGUiLCJ2ZXJpZnlUb2tlbiIsImlzQWRtaW4iLCJjcmVhdGVDb3Vwb24iLCJnZXRBbGxDb3Vwb25zIiwicHV0IiwidXBkYXRlQ291cG9uIiwiZGVsZXRlIiwiZGVsZXRlQ291cG9uIiwicGF0Y2giLCJyZXNldENvdXBvblVzYWdlIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9jb3Vwb25Sb3V0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCB7IFxuICBjcmVhdGVDb3Vwb24sIFxuICBnZXRBbGxDb3Vwb25zLCBcbiAgZ2V0Q291cG9uQnlDb2RlLCBcbiAgdmFsaWRhdGVDb3Vwb24sXG4gIHVwZGF0ZUNvdXBvblVzYWdlLFxuICB1cGRhdGVDb3Vwb24sXG4gIGRlbGV0ZUNvdXBvbixcbiAgcmVzZXRDb3Vwb25Vc2FnZSxcbiAgZ2V0Q291cG9uU3RhdHNcbn0gZnJvbSBcIi4uL0NvbnRyb2xsZXIvY291cG9uQ29udHJvbGxlci5qc1wiO1xuaW1wb3J0IHsgdmVyaWZ5VG9rZW4sIGlzQWRtaW4gfSBmcm9tIFwiLi4vTWlkZGxld2FyZS9hdXRoTWlkZGxld2FyZS5qc1wiO1xuaW1wb3J0IENvdXBvbiBmcm9tIFwiLi4vTW9kZWwvQ291cG9uLmpzXCI7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIFB1YmxpYyBBUEkgLSBjw7MgdGjhu4MgdHJ1eSBj4bqtcCBtw6Aga2jDtG5nIGPhuqduIHjDoWMgdGjhu7FjXG5yb3V0ZXIucG9zdChcIi92YWxpZGF0ZVwiLCB2YWxpZGF0ZUNvdXBvbik7XG5yb3V0ZXIuZ2V0KFwiL2NvZGUvOmNvZGVcIiwgZ2V0Q291cG9uQnlDb2RlKTtcbnJvdXRlci5wb3N0KFwiL3VzZS86Y29kZVwiLCB1cGRhdGVDb3Vwb25Vc2FnZSk7XG5cbi8vIFJvdXRlIHRvIGdldCBjb3Vwb24gc3RhdGlzdGljcyBmb3IgcmVwb3J0c1xucm91dGVyLmdldChcIi9zdGF0c1wiLCBnZXRDb3Vwb25TdGF0cyk7XG5cbi8vIFB1YmxpYyBkZWJ1ZyByb3V0ZSBmb3IgZGV2ZWxvcG1lbnRcbnJvdXRlci5nZXQoXCIvYWxsLWZvci1kZWJ1Z1wiLCBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBhbGxDb3Vwb25zID0gYXdhaXQgQ291cG9uLmZpbmQoKS5saW1pdCgxMCk7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKGFsbENvdXBvbnMpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IFwiSW50ZXJuYWwgc2VydmVyIGVycm9yIGluIGRlYnVnIHJvdXRlXCIgfSk7XG4gIH1cbn0pO1xuXG4vLyBSb3V0ZSDEkeG7gyBs4bqleSBkYW5oIHPDoWNoIG3DoyBnaeG6o20gZ2nDoSBjw7RuZyBraGFpIGNobyBuZ8aw4budaSBkw7luZ1xucm91dGVyLmdldChcIi9hY3RpdmVcIiwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgbGltaXQgPSBwYXJzZUludChyZXEucXVlcnkubGltaXQpIHx8IDM7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICBcbiAgICAvLyBGaW5kIGFjdGl2ZSBjb3Vwb25zIHRoYXQgaGF2ZW4ndCBleHBpcmVkIGFuZCBoYXZlbid0IHJlYWNoZWQgdXNhZ2UgbGltaXRcbiAgICBjb25zdCBjb3Vwb25zID0gYXdhaXQgQ291cG9uLmZpbmQoe1xuICAgICAgaXNBY3RpdmU6IHRydWUsXG4gICAgICAkb3I6IFtcbiAgICAgICAgeyBleHBpcmVzQXQ6IHsgJGd0OiBub3cgfSB9LFxuICAgICAgICB7IGV4cGlyZXNBdDogbnVsbCB9XG4gICAgICBdLFxuICAgICAgJG9yOiBbXG4gICAgICAgIHsgJGV4cHI6IHsgJGx0OiBbXCIkdXNlZFwiLCBcIiR1c2FnZUxpbWl0XCJdIH0gfSxcbiAgICAgICAgeyB1c2FnZUxpbWl0OiBudWxsIH1cbiAgICAgIF1cbiAgICB9KVxuICAgIC5zb3J0KHsgY3JlYXRlZEF0OiAtMSB9KVxuICAgIC5saW1pdChsaW1pdCk7XG4gICAgXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKGNvdXBvbnMpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBnZXR0aW5nIGFjdGl2ZSBjb3Vwb25zOlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgbWVzc2FnZTogXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIiB9KTtcbiAgfVxufSk7XG5cbi8vIFByb3RlY3RlZCBBUEkgLSB5w6p1IGPhuqd1IHjDoWMgdGjhu7FjIHbDoCBxdXnhu4FuIEFkbWluXG5yb3V0ZXIucG9zdChcIi9cIiwgdmVyaWZ5VG9rZW4sIGlzQWRtaW4sIGNyZWF0ZUNvdXBvbik7XG5yb3V0ZXIuZ2V0KFwiL1wiLCB2ZXJpZnlUb2tlbiwgaXNBZG1pbiwgZ2V0QWxsQ291cG9ucyk7XG5yb3V0ZXIucHV0KFwiLzppZFwiLCB2ZXJpZnlUb2tlbiwgaXNBZG1pbiwgdXBkYXRlQ291cG9uKTtcbnJvdXRlci5kZWxldGUoXCIvOmlkXCIsIHZlcmlmeVRva2VuLCBpc0FkbWluLCBkZWxldGVDb3Vwb24pO1xuXG4vLyBSZXNldCBz4buRIGzhuqduIHPhu60gZOG7pW5nIG3DoyBnaeG6o20gZ2nDoSAoQWRtaW4gb25seSlcbnJvdXRlci5wYXRjaChcIi9yZXNldC11c2FnZS86aWRcIiwgdmVyaWZ5VG9rZW4sIGlzQWRtaW4sIHJlc2V0Q291cG9uVXNhZ2UpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7ICJdLCJtYXBwaW5ncyI6Im9HQUFBLElBQUFBLFFBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGlCQUFBLEdBQUFELE9BQUE7Ozs7Ozs7Ozs7O0FBV0EsSUFBQUUsZUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBLHdCQUF3QyxTQUFBRCx1QkFBQUssQ0FBQSxVQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxHQUFBRCxDQUFBLEtBQUFFLE9BQUEsRUFBQUYsQ0FBQTs7QUFFeEMsTUFBTUcsTUFBTSxHQUFHQyxnQkFBTyxDQUFDQyxNQUFNLENBQUMsQ0FBQzs7QUFFL0I7QUFDQUYsTUFBTSxDQUFDRyxJQUFJLENBQUMsV0FBVyxFQUFFQyxnQ0FBYyxDQUFDO0FBQ3hDSixNQUFNLENBQUNLLEdBQUcsQ0FBQyxhQUFhLEVBQUVDLGlDQUFlLENBQUM7QUFDMUNOLE1BQU0sQ0FBQ0csSUFBSSxDQUFDLFlBQVksRUFBRUksbUNBQWlCLENBQUM7O0FBRTVDO0FBQ0FQLE1BQU0sQ0FBQ0ssR0FBRyxDQUFDLFFBQVEsRUFBRUcsZ0NBQWMsQ0FBQzs7QUFFcEM7QUFDQVIsTUFBTSxDQUFDSyxHQUFHLENBQUMsZ0JBQWdCLEVB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