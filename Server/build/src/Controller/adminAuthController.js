"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.adminLogin = void 0;var _adminModel = _interopRequireDefault(require("../Model/adminModel.js"));
var _bcryptjs = _interopRequireDefault(require("bcryptjs"));
var _jsonwebtoken = _interopRequireDefault(require("jsonwebtoken"));
var _dotenv = _interopRequireDefault(require("dotenv"));
var _RefreshToken = _interopRequireDefault(require("../Model/RefreshToken.js"));

_dotenv.default.config();

const adminLogin = async (req, res) => {
  try {
    const { userName, password } = req.body;

    // Tìm admin theo username
    const admin = await _adminModel.default.findOne({ userName });
    if (!admin) {
      return res.status(401).json({ message: "Tên đăng nhập hoặc mật khẩu không chính xác" });
    }

    // Kiểm tra mật khẩu
    const isMatch = await admin.comparePassword(password);
    if (!isMatch) {
      return res.status(401).json({ message: "Tên đăng nhập hoặc mật khẩu không chính xác" });
    }

    // Kiểm tra tài khoản có bị khóa không
    if (!admin.isActive) {
      return res.status(403).json({ message: "Tài khoản đã bị khóa" });
    }

    // Tạo access token
    const accessToken = _jsonwebtoken.default.sign(
      {
        userId: admin._id,
        role: admin.role,
        permissions: admin.permissions
      },
      process.env.JWT_SECRET_ACCESS,
      { expiresIn: "1d" }
    );

    // Tạo refresh token
    const refreshToken = _jsonwebtoken.default.sign(
      { userId: admin._id },
      process.env.JWT_REFRESH_SECRET,
      { expiresIn: "7d" }
    );

    // Xóa tất cả refresh token cũ của admin
    await _RefreshToken.default.deleteMany({
      userId: admin._id,
      userModel: "Admin"
    });

    // Lưu refresh token mới
    await _RefreshToken.default.create({
      userId: admin._id,
      userModel: "Admin",
      token: refreshToken,
      expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 days
    });

    // Cập nhật thời gian đăng nhập cuối
    admin.lastLogin = new Date();
    await admin.save();

    // Trả về thông tin admin và token
    res.status(200).json({
      accessToken,
      refreshToken,
      userId: admin._id,
      role: admin.role,
      permissions: admin.permissions,
      fullName: admin.fullName,
      branchId: admin.branchId || null,
      message: "Đăng nhập thành công"
    });
  } catch (error) {
    console.error("Admin login error:", error);
    res.status(500).json({ message: "Lỗi server khi đăng nhập" });
  }
};exports.adminLogin = adminLogin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYWRtaW5Nb2RlbCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2JjcnlwdGpzIiwiX2pzb253ZWJ0b2tlbiIsIl9kb3RlbnYiLCJfUmVmcmVzaFRva2VuIiwiZG90ZW52IiwiY29uZmlnIiwiYWRtaW5Mb2dpbiIsInJlcSIsInJlcyIsInVzZXJOYW1lIiwicGFzc3dvcmQiLCJib2R5IiwiYWRtaW4iLCJBZG1pbiIsImZpbmRPbmUiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImlzTWF0Y2giLCJjb21wYXJlUGFzc3dvcmQiLCJpc0FjdGl2ZSIsImFjY2Vzc1Rva2VuIiwiand0Iiwic2lnbiIsInVzZXJJZCIsIl9pZCIsInJvbGUiLCJwZXJtaXNzaW9ucyIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUX0FDQ0VTUyIsImV4cGlyZXNJbiIsInJlZnJlc2hUb2tlbiIsIkpXVF9SRUZSRVNIX1NFQ1JFVCIsIlJlZnJlc2hUb2tlbiIsImRlbGV0ZU1hbnkiLCJ1c2VyTW9kZWwiLCJjcmVhdGUiLCJ0b2tlbiIsImV4cGlyZXNBdCIsIkRhdGUiLCJub3ciLCJsYXN0TG9naW4iLCJzYXZlIiwiZnVsbE5hbWUiLCJicmFuY2hJZCIsImVycm9yIiwiY29uc29sZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvQ29udHJvbGxlci9hZG1pbkF1dGhDb250cm9sbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBZG1pbiBmcm9tIFwiLi4vTW9kZWwvYWRtaW5Nb2RlbC5qc1wiO1xyXG5pbXBvcnQgYmNyeXB0IGZyb20gXCJiY3J5cHRqc1wiO1xyXG5pbXBvcnQgand0IGZyb20gXCJqc29ud2VidG9rZW5cIjtcclxuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XHJcbmltcG9ydCBSZWZyZXNoVG9rZW4gZnJvbSBcIi4uL01vZGVsL1JlZnJlc2hUb2tlbi5qc1wiO1xyXG5cclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkbWluTG9naW4gPSBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgeyB1c2VyTmFtZSwgcGFzc3dvcmQgfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgICAgICAvLyBUw6xtIGFkbWluIHRoZW8gdXNlcm5hbWVcclxuICAgICAgICBjb25zdCBhZG1pbiA9IGF3YWl0IEFkbWluLmZpbmRPbmUoeyB1c2VyTmFtZSB9KTtcclxuICAgICAgICBpZiAoIWFkbWluKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IG1lc3NhZ2U6IFwiVMOqbiDEkcSDbmcgbmjhuq1wIGhv4bq3YyBt4bqtdCBraOG6qXUga2jDtG5nIGNow61uaCB4w6FjXCIgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBLaeG7g20gdHJhIG3huq10IGto4bqpdVxyXG4gICAgICAgIGNvbnN0IGlzTWF0Y2ggPSBhd2FpdCBhZG1pbi5jb21wYXJlUGFzc3dvcmQocGFzc3dvcmQpO1xyXG4gICAgICAgIGlmICghaXNNYXRjaCkge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiBcIlTDqm4gxJHEg25nIG5o4bqtcCBob+G6t2MgbeG6rXQga2jhuql1IGtow7RuZyBjaMOtbmggeMOhY1wiIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gS2nhu4NtIHRyYSB0w6BpIGtob+G6o24gY8OzIGLhu4sga2jDs2Ega2jDtG5nXHJcbiAgICAgICAgaWYgKCFhZG1pbi5pc0FjdGl2ZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDMpLmpzb24oeyBtZXNzYWdlOiBcIlTDoGkga2hv4bqjbiDEkcOjIGLhu4sga2jDs2FcIiB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFThuqFvIGFjY2VzcyB0b2tlblxyXG4gICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gand0LnNpZ24oXHJcbiAgICAgICAgICAgIHsgXHJcbiAgICAgICAgICAgICAgICB1c2VySWQ6IGFkbWluLl9pZCxcclxuICAgICAgICAgICAgICAgIHJvbGU6IGFkbWluLnJvbGUsXHJcbiAgICAgICAgICAgICAgICBwZXJtaXNzaW9uczogYWRtaW4ucGVybWlzc2lvbnNcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVF9BQ0NFU1MsXHJcbiAgICAgICAgICAgIHsgZXhwaXJlc0luOiBcIjFkXCIgfVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIC8vIFThuqFvIHJlZnJlc2ggdG9rZW5cclxuICAgICAgICBjb25zdCByZWZyZXNoVG9rZW4gPSBqd3Quc2lnbihcclxuICAgICAgICAgICAgeyB1c2VySWQ6IGFkbWluLl9pZCB9LFxyXG4gICAgICAgICAgICBwcm9jZXNzLmVudi5KV1RfUkVGUkVTSF9TRUNSRVQsXHJcbiAgICAgICAgICAgIHsgZXhwaXJlc0luOiBcIjdkXCIgfVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIC8vIFjDs2EgdOG6pXQgY+G6oyByZWZyZXNoIHRva2VuIGPFqSBj4bunYSBhZG1pblxyXG4gICAgICAgIGF3YWl0IFJlZnJlc2hUb2tlbi5kZWxldGVNYW55KHtcclxuICAgICAgICAgICAgdXNlcklkOiBhZG1pbi5faWQsXHJcbiAgICAgICAgICAgIHVzZXJNb2RlbDogXCJBZG1pblwiXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIEzGsHUgcmVmcmVzaCB0b2tlbiBt4bubaVxyXG4gICAgICAgIGF3YWl0IFJlZnJlc2hUb2tlbi5jcmVhdGUoe1xyXG4gICAgICAgICAgICB1c2VySWQ6IGFkbWluLl9pZCxcclxuICAgICAgICAgICAgdXNlck1vZGVsOiBcIkFkbWluXCIsXHJcbiAgICAgICAgICAgIHRva2VuOiByZWZyZXNoVG9rZW4sXHJcbiAgICAgICAgICAgIGV4cGlyZXNBdDogbmV3IERhdGUoRGF0ZS5ub3coKSArIDcgKiAyNCAqIDYwICogNjAgKiAxMDAwKSAvLyA3IGRheXNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gQ+G6rXAgbmjhuq10IHRo4budaSBnaWFuIMSRxINuZyBuaOG6rXAgY3Xhu5FpXHJcbiAgICAgICAgYWRtaW4ubGFzdExvZ2luID0gbmV3IERhdGUoKTtcclxuICAgICAgICBhd2FpdCBhZG1pbi5zYXZlKCk7XHJcblxyXG4gICAgICAgIC8vIFRy4bqjIHbhu4EgdGjDtG5nIHRpbiBhZG1pbiB2w6AgdG9rZW5cclxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgICAgIGFjY2Vzc1Rva2VuLFxyXG4gICAgICAgICAgICByZWZyZXNoVG9rZW4sXHJcbiAgICAgICAgICAgIHVzZXJJZDogYWRtaW4uX2lkLFxyXG4gICAgICAgICAgICByb2xlOiBhZG1pbi5yb2xlLFxyXG4gICAgICAgICAgICBwZXJtaXNzaW9uczogYWRtaW4ucGVybWlzc2lvbnMsXHJcbiAgICAgICAgICAgIGZ1bGxOYW1lOiBhZG1pbi5mdWxsTmFtZSxcclxuICAgICAgICAgICAgYnJhbmNoSWQ6IGFkbWluLmJyYW5jaElkIHx8IG51bGwsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwixJDEg25nIG5o4bqtcCB0aMOgbmggY8O0bmdcIlxyXG4gICAgICAgIH0pO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiQWRtaW4gbG9naW4gZXJyb3I6XCIsIGVycm9yKTtcclxuICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IG1lc3NhZ2U6IFwiTOG7l2kgc2VydmVyIGtoaSDEkcSDbmcgbmjhuq1wXCIgfSk7XHJcbiAgICB9XHJcbn07ICJdLCJtYXBwaW5ncyI6IjRMQUFBLElBQUFBLFdBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFNBQUEsR0FBQUYsc0JB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