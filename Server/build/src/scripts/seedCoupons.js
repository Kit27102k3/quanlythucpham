"use strict";var _mongoose = _interopRequireDefault(require("mongoose"));
var _dotenv = _interopRequireDefault(require("dotenv"));
var _Coupon = _interopRequireDefault(require("../Model/Coupon.js"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };}

// Load environment variables
_dotenv.default.config({ path: ".env" });

// Connect to MongoDB
_mongoose.default.connect(process.env.MONGOOSE_URI).
then(() => console.log('Connected to MongoDB')).
catch((err) => {
  console.error('MongoDB connection error:', err);
  process.exit(1);
});

// Sample coupon data
const sampleCoupons = [
{
  code: 'WELCOME10',
  type: 'percentage',
  value: 10,
  minOrder: 100000,
  maxDiscount: 50000,
  expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days from now
  usageLimit: 100,
  used: 0,
  isActive: true,
  description: 'Giảm 10% cho khách hàng mới'
},
{
  code: 'FREESHIP',
  type: 'fixed',
  value: 30000,
  minOrder: 200000,
  expiresAt: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000), // 60 days from now
  usageLimit: null, // Unlimited usage
  used: 0,
  isActive: true,
  description: 'Miễn phí vận chuyển'
},
{
  code: 'SUMMER25',
  type: 'percentage',
  value: 25,
  minOrder: 300000,
  maxDiscount: 150000,
  expiresAt: new Date(Date.now() + 45 * 24 * 60 * 60 * 1000), // 45 days from now
  usageLimit: 50,
  used: 0,
  isActive: true,
  description: 'Khuyến mãi mùa hè'
}];


// Seed function
const seedCoupons = async () => {
  try {
    // Delete existing coupons first (optional)
    await _Coupon.default.deleteMany({});
    console.log('Existing coupons deleted');

    // Insert sample coupons
    const result = await _Coupon.default.insertMany(sampleCoupons);
    console.log(`${result.length} coupons inserted successfully`);

    // Display the inserted coupons
    console.log('Inserted coupons:');
    result.forEach((coupon) => {
      console.log(`- ${coupon.code}: ${coupon.type === 'percentage' ? coupon.value + '%' : coupon.value + 'đ'} off`);
    });

    // Disconnect from MongoDB
    _mongoose.default.disconnect();
    console.log('Database connection closed');
  } catch (error) {
    console.error('Error seeding coupons:', error);
    _mongoose.default.disconnect();
    process.exit(1);
  }
};

// Run the seed function
seedCoupons();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbW9uZ29vc2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9kb3RlbnYiLCJfQ291cG9uIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZG90ZW52IiwiY29uZmlnIiwicGF0aCIsIm1vbmdvb3NlIiwiY29ubmVjdCIsInByb2Nlc3MiLCJlbnYiLCJNT05HT09TRV9VUkkiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJleGl0Iiwic2FtcGxlQ291cG9ucyIsImNvZGUiLCJ0eXBlIiwidmFsdWUiLCJtaW5PcmRlciIsIm1heERpc2NvdW50IiwiZXhwaXJlc0F0IiwiRGF0ZSIsIm5vdyIsInVzYWdlTGltaXQiLCJ1c2VkIiwiaXNBY3RpdmUiLCJkZXNjcmlwdGlvbiIsInNlZWRDb3Vwb25zIiwiQ291cG9uIiwiZGVsZXRlTWFueSIsInJlc3VsdCIsImluc2VydE1hbnkiLCJsZW5ndGgiLCJmb3JFYWNoIiwiY291cG9uIiwiZGlzY29ubmVjdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY3JpcHRzL3NlZWRDb3Vwb25zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcclxuaW1wb3J0IENvdXBvbiBmcm9tICcuLi9Nb2RlbC9Db3Vwb24uanMnO1xyXG5cclxuLy8gTG9hZCBlbnZpcm9ubWVudCB2YXJpYWJsZXNcclxuZG90ZW52LmNvbmZpZyh7IHBhdGg6IFwiLmVudlwiIH0pO1xyXG5cclxuLy8gQ29ubmVjdCB0byBNb25nb0RCXHJcbm1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuTU9OR09PU0VfVVJJKVxyXG4gIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gTW9uZ29EQicpKVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdNb25nb0RCIGNvbm5lY3Rpb24gZXJyb3I6JywgZXJyKTtcclxuICAgIHByb2Nlc3MuZXhpdCgxKTtcclxuICB9KTtcclxuXHJcbi8vIFNhbXBsZSBjb3Vwb24gZGF0YVxyXG5jb25zdCBzYW1wbGVDb3Vwb25zID0gW1xyXG4gIHtcclxuICAgIGNvZGU6ICdXRUxDT01FMTAnLFxyXG4gICAgdHlwZTogJ3BlcmNlbnRhZ2UnLFxyXG4gICAgdmFsdWU6IDEwLFxyXG4gICAgbWluT3JkZXI6IDEwMDAwMCxcclxuICAgIG1heERpc2NvdW50OiA1MDAwMCxcclxuICAgIGV4cGlyZXNBdDogbmV3IERhdGUoRGF0ZS5ub3coKSArIDMwICogMjQgKiA2MCAqIDYwICogMTAwMCksIC8vIDMwIGRheXMgZnJvbSBub3dcclxuICAgIHVzYWdlTGltaXQ6IDEwMCxcclxuICAgIHVzZWQ6IDAsXHJcbiAgICBpc0FjdGl2ZTogdHJ1ZSxcclxuICAgIGRlc2NyaXB0aW9uOiAnR2nhuqNtIDEwJSBjaG8ga2jDoWNoIGjDoG5nIG3hu5tpJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgY29kZTogJ0ZSRUVTSElQJyxcclxuICAgIHR5cGU6ICdmaXhlZCcsXHJcbiAgICB2YWx1ZTogMzAwMDAsXHJcbiAgICBtaW5PcmRlcjogMjAwMDAwLFxyXG4gICAgZXhwaXJlc0F0OiBuZXcgRGF0ZShEYXRlLm5vdygpICsgNjAgKiAyNCAqIDYwICogNjAgKiAxMDAwKSwgLy8gNjAgZGF5cyBmcm9tIG5vd1xyXG4gICAgdXNhZ2VMaW1pdDogbnVsbCwgLy8gVW5saW1pdGVkIHVzYWdlXHJcbiAgICB1c2VkOiAwLFxyXG4gICAgaXNBY3RpdmU6IHRydWUsXHJcbiAgICBkZXNjcmlwdGlvbjogJ01p4buFbiBwaMOtIHbhuq1uIGNodXnhu4NuJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgY29kZTogJ1NVTU1FUjI1JyxcclxuICAgIHR5cGU6ICdwZXJjZW50YWdlJyxcclxuICAgIHZhbHVlOiAyNSxcclxuICAgIG1pbk9yZGVyOiAzMDAwMDAsXHJcbiAgICBtYXhEaXNjb3VudDogMTUwMDAwLFxyXG4gICAgZXhwaXJlc0F0OiBuZXcgRGF0ZShEYXRlLm5vdygpICsgNDUgKiAyNCAqIDYwICogNjAgKiAxMDAwKSwgLy8gNDUgZGF5cyBmcm9tIG5vd1xyXG4gICAgdXNhZ2VMaW1pdDogNTAsXHJcbiAgICB1c2VkOiAwLFxyXG4gICAgaXNBY3RpdmU6IHRydWUsXHJcbiAgICBkZXNjcmlwdGlvbjogJ0todXnhur9uIG3Do2kgbcO5YSBow6gnXHJcbiAgfVxyXG5dO1xyXG5cclxuLy8gU2VlZCBmdW5jdGlvblxyXG5jb25zdCBzZWVkQ291cG9ucyA9IGFzeW5jICgpID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gRGVsZXRlIGV4aXN0aW5nIGNvdXBvbnMgZmlyc3QgKG9wdGlvbmFsKVxyXG4gICAgYXdhaXQgQ291cG9uLmRlbGV0ZU1hbnkoe30pO1xyXG4gICAgY29uc29sZS5sb2coJ0V4aXN0aW5nIGNvdXBvbnMgZGVsZXRlZCcpO1xyXG4gICAgXHJcbiAgICAvLyBJbnNlcnQgc2FtcGxlIGNvdXBvbnNcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IENvdXBvbi5pbnNlcnRNYW55KHNhbXBsZUNvdXBvbnMpO1xyXG4gICAgY29uc29sZS5sb2coYCR7cmVzdWx0Lmxlbmd0aH0gY291cG9ucyBpbnNlcnRlZCBzdWNjZXNzZnVsbHlgKTtcclxuICAgIFxyXG4gICAgLy8gRGlzcGxheSB0aGUgaW5zZXJ0ZWQgY291cG9uc1xyXG4gICAgY29uc29sZS5sb2coJ0luc2VydGVkIGNvdXBvbnM6Jyk7XHJcbiAgICByZXN1bHQuZm9yRWFjaChjb3Vwb24gPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhgLSAke2NvdXBvbi5jb2RlfTogJHtjb3Vwb24udHlwZSA9PT0gJ3BlcmNlbnRhZ2UnID8gY291cG9uLnZhbHVlICsgJyUnIDogY291cG9uLnZhbHVlICsgJ8SRJ30gb2ZmYCk7XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8gRGlzY29ubmVjdCBmcm9tIE1vbmdvREJcclxuICAgIG1vbmdvb3NlLmRpc2Nvbm5lY3QoKTtcclxuICAgIGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0aW9uIGNsb3NlZCcpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBzZWVkaW5nIGNvdXBvbnM6JywgZXJyb3IpO1xyXG4gICAgbW9uZ29vc2UuZGlzY29ubmVjdCgpO1xyXG4gICAgcHJvY2Vzcy5leGl0KDEpO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIFJ1biB0aGUgc2VlZCBmdW5jdGlvblxyXG5zZWVkQ291cG9ucygpOyAiXSwibWFwcGluZ3MiOiJhQUFBLElBQUFBLFNBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLE9BQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQSx3QkFBd0MsU0FBQUQsdUJBQUFJLENBQUEsVUFBQUEsQ0FBQSxJQUFBQSxDQUFBLENBQUFDLFVBQUEsR0FBQUQsQ0FBQSxLQUFBRSxPQUFBLEVBQUFGLENBQUE7O0FBRXhDO0FBQ0FHLGVBQU0sQ0FBQ0MsTUFBTSxDQUFDLEVBQUVDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDOztBQUUvQjtBQUNBQyxpQkFBUSxDQUFDQyxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxZQUFZLENBQUM7QUFDdkNDLElBQUksQ0FBQyxNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQy9DQyxLQUFLLENBQUMsQ0FBQ0MsR0FBRyxLQUFLO0VBQ2RILE9BQU8sQ0FBQ0ksS0FBSyxDQUFDLDJCQUEyQixFQUFFRCxHQUFHLENBQUM7RUFDL0NQLE9BQU8sQ0FBQ1MsSUFBSSxDQUFDLENBQUMsQ0FBQztBQUNqQixDQUFDLENBQUM7O0FBRUo7QUFDQSxNQUFNQyxhQUFhLEdBQUc7QUFDcEI7RUFDRUMsSUFBSSxFQUFFLFdBQVc7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